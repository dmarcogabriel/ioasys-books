// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pages/Books should match snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#e5e5e5",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 0,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 40,
        },
      ]
    }
  >
    <View
      noMargin={true}
      noPadding={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 0,
            "paddingTop": 0,
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/components/HeaderTitle/assets/logo-dark.png",
          }
        }
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="dark"
        style={
          Array [
            Object {
              "color": "#333333",
              "fontSize": 28,
              "marginLeft": 16,
            },
          ]
        }
        testID="headerTitle"
      >
        Books
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#33333333",
          "borderRadius": 100,
          "borderStyle": "solid",
          "borderWidth": 1,
          "opacity": 1,
          "paddingBottom": 9,
          "paddingLeft": 9,
          "paddingRight": 9,
          "paddingTop": 9,
        }
      }
      testID="logoutButton"
    >
      <Text>
        Icon
      </Text>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#e5e5e5",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginTop": 32,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#33333333",
              "borderRadius": 2,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "90%",
            },
          ]
        }
      >
        <TextInput
          onChangeText={[Function]}
          onEndEditing={[Function]}
          placeholder="Procure um livro"
          style={
            Array [
              Object {
                "paddingBottom": 16,
                "paddingLeft": 8,
                "paddingRight": 46,
                "paddingTop": 16,
                "width": "100%",
              },
            ]
          }
          testID="searchInput"
          value=""
        />
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
              "marginRight": 16,
              "marginTop": 16,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
            }
          }
          testID="searchInputButton"
        >
          <Text>
            Icon
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text>
          Icon
        </Text>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <BooksFooter
          disabled={false}
          onLoadMore={[Function]}
        />
      }
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="bookList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      isVisible={false}
      onBackdropPress={[Function]}
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "padding": 16,
        }
      }
      testID="filtersModal"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "borderRadius": 4,
              "paddingBottom": 24,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-end",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderColor": "#33333333",
                "borderRadius": 100,
                "borderStyle": "solid",
                "borderWidth": 1,
                "opacity": 1,
                "paddingBottom": 9,
                "paddingLeft": 9,
                "paddingRight": 9,
                "paddingTop": 9,
              }
            }
            testID="closeButton"
          >
            <Text>
              Icon
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "marginBottom": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 16,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#333333",
                  "fontSize": 12,
                  "fontWeight": "bold",
                  "marginBottom": 4,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 4,
                },
              ]
            }
            testID="filtersChipsTitle"
          >
            Selecione a categoria
          </Text>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "marginBottom": 4,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 4,
                },
              ]
            }
            testID="filtersChipsOptions"
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#333333",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
              testID="filtersChipsOptionButtonCategory1"
            >
              <Text
                isSelected={false}
                style={
                  Array [
                    Object {
                      "color": "#333333",
                      "fontSize": 12,
                    },
                  ]
                }
                testID="filtersChipsOptionTextCategory1"
              >
                Design
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#333333",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
              testID="filtersChipsOptionButtonCategory2"
            >
              <Text
                isSelected={false}
                style={
                  Array [
                    Object {
                      "color": "#333333",
                      "fontSize": 12,
                    },
                  ]
                }
                testID="filtersChipsOptionTextCategory2"
              >
                UX Design
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#333333",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
              testID="filtersChipsOptionButtonCategory3"
            >
              <Text
                isSelected={false}
                style={
                  Array [
                    Object {
                      "color": "#333333",
                      "fontSize": 12,
                    },
                  ]
                }
                testID="filtersChipsOptionTextCategory3"
              >
                UI Design
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "marginBottom": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 16,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#333333",
                  "fontSize": 12,
                  "fontWeight": "bold",
                  "marginBottom": 4,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 4,
                },
              ]
            }
            testID="filtersChipsTitle"
          >
            Selecione o ano
          </Text>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "marginBottom": 4,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 4,
                },
              ]
            }
            testID="filtersChipsOptions"
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#333333",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
              testID="filtersChipsOptionButtonYear1"
            >
              <Text
                isSelected={false}
                style={
                  Array [
                    Object {
                      "color": "#333333",
                      "fontSize": 12,
                    },
                  ]
                }
                testID="filtersChipsOptionTextYear1"
              >
                1998
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#333333",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
              testID="filtersChipsOptionButtonYear2"
            >
              <Text
                isSelected={false}
                style={
                  Array [
                    Object {
                      "color": "#333333",
                      "fontSize": 12,
                    },
                  ]
                }
                testID="filtersChipsOptionTextYear2"
              >
                2000
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#333333",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
              testID="filtersChipsOptionButtonYear3"
            >
              <Text
                isSelected={false}
                style={
                  Array [
                    Object {
                      "color": "#333333",
                      "fontSize": 12,
                    },
                  ]
                }
                testID="filtersChipsOptionTextYear3"
              >
                2002
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#B22E6F",
                "borderRadius": 20,
                "borderStyle": "solid",
                "borderWidth": 1,
                "justifyContent": "center",
                "marginTop": 32,
                "opacity": 1,
                "paddingBottom": 8,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 8,
              }
            }
            testID="filterButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#B22E6F",
                    "fontSize": 16,
                  },
                ]
              }
            >
              Filtrar
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
